<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://kendaleiv.com/</id><title>Ken Dale</title><subtitle>Jesus follower, husband, father, cat dad, software engineer.</subtitle> <updated>2022-09-30T11:08:57-04:00</updated> <author> <name>Ken Dale</name> <uri>https://kendaleiv.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://kendaleiv.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://kendaleiv.com/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Ken Dale </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Lessons Learned Implementing a Must Succeed Durable Functions Workflow</title><link href="https://kendaleiv.com/lessons-learned-implementing-a-must-succeed-durable-functions-workflow/" rel="alternate" type="text/html" title="Lessons Learned Implementing a Must Succeed Durable Functions Workflow" /><published>2022-08-09T00:00:00-04:00</published> <updated>2022-09-30T11:04:11-04:00</updated> <id>https://kendaleiv.com/lessons-learned-implementing-a-must-succeed-durable-functions-workflow/</id> <content src="https://kendaleiv.com/lessons-learned-implementing-a-must-succeed-durable-functions-workflow/" /> <author> <name>Ken Dale</name> </author> <summary> Durable Functions is an extension for Azure Functions to help write stateful services in a stateless environment. Here’s a few thoughts for a successful production implementation of a must succeed workflow. (and by must succeed, I mean a workflow where failure results in a broken state) Consider Failures And How To Mitigate Them Outages in dependent services can be short or lengthy. For trans... </summary> </entry> <entry><title>Setting Regex Timeout Globally Using .NET 6.0 With C#</title><link href="https://kendaleiv.com/setting-regex-timeout-globally-using-dotnet-6_0-with-csharp/" rel="alternate" type="text/html" title="Setting Regex Timeout Globally Using .NET 6.0 With C#" /><published>2022-04-22T00:00:00-04:00</published> <updated>2022-09-30T11:04:11-04:00</updated> <id>https://kendaleiv.com/setting-regex-timeout-globally-using-dotnet-6_0-with-csharp/</id> <content src="https://kendaleiv.com/setting-regex-timeout-globally-using-dotnet-6_0-with-csharp/" /> <author> <name>Ken Dale</name> </author> <summary> .NET 6.0 allows the global regular expression (regex) timeout to be configured. By default, the global timeout is Regex.InfiniteMatchTimeout and regex operations will run until completion. If a timeout is exceeded System.Text.RegularExpressions.RegexMatchTimeoutException will be thrown. Setting the global regex timeout This will set the default regex timeout to 2 seconds: // https://learn.m... </summary> </entry> <entry><title>Retrieving ObjectIds In An Azure Active Directory Group Using Azure CLI</title><link href="https://kendaleiv.com/retrieving-objectids-in-an-azure-active-diretory-group-using-azure-cli/" rel="alternate" type="text/html" title="Retrieving ObjectIds In An Azure Active Directory Group Using Azure CLI" /><published>2021-07-02T00:00:00-04:00</published> <updated>2022-09-30T11:04:11-04:00</updated> <id>https://kendaleiv.com/retrieving-objectids-in-an-azure-active-diretory-group-using-azure-cli/</id> <content src="https://kendaleiv.com/retrieving-objectids-in-an-azure-active-diretory-group-using-azure-cli/" /> <author> <name>Ken Dale</name> </author> <summary> Using Azure CLI we can retrieve a list of objectIds in a Azure Active Directory group. Setup Install the Azure CLI if it’s not already installed. If you aren’t currently logged in with Azure CLI run: &amp;gt; az login Retrieving ObjectIds Now, you’re ready to get the objectIds! &amp;gt; az ad group member list --group "GROUP_NAME_HERE" --query "[].{displayName: displayName, userPrincipalName: u... </summary> </entry> <entry><title>Naming Durable Functions With Prefixes For Application Insights Filtering</title><link href="https://kendaleiv.com/naming-durable-functions-with-prefixes-for-application-insights-filtering/" rel="alternate" type="text/html" title="Naming Durable Functions With Prefixes For Application Insights Filtering" /><published>2021-04-23T00:00:00-04:00</published> <updated>2022-09-30T11:04:11-04:00</updated> <id>https://kendaleiv.com/naming-durable-functions-with-prefixes-for-application-insights-filtering/</id> <content src="https://kendaleiv.com/naming-durable-functions-with-prefixes-for-application-insights-filtering/" /> <author> <name>Ken Dale</name> </author> <summary> Durable Functions is an extension for Azure Functions to help write stateful services in a stateless environment. After deploying Durable Functions functionality to an existing Azure Functions application you may find the average response time in Application Insights appears degraded. If you want to verify performance metrics haven’t degraded in a user-facing manner it may be helpful to filter ... </summary> </entry> <entry><title>Retrieving All Managed Identity ObjectIds In Resource Group For Azure App Services And Azure Functions Using Azure CLI</title><link href="https://kendaleiv.com/retrieving-all-managed-identity-objectids-in-resource-group-for-azure-app-services-and-azure-functions-using-azure-cli/" rel="alternate" type="text/html" title="Retrieving All Managed Identity ObjectIds In Resource Group For Azure App Services And Azure Functions Using Azure CLI" /><published>2021-04-20T00:00:00-04:00</published> <updated>2022-09-30T11:04:11-04:00</updated> <id>https://kendaleiv.com/retrieving-all-managed-identity-objectids-in-resource-group-for-azure-app-services-and-azure-functions-using-azure-cli/</id> <content src="https://kendaleiv.com/retrieving-all-managed-identity-objectids-in-resource-group-for-azure-app-services-and-azure-functions-using-azure-cli/" /> <author> <name>Ken Dale</name> </author> <summary> If you’re working with Azure App Services, Azure Functions, or perhaps another Azure service that implements managed identity in the same way it can be useful to get a list of the object ids for an entire resource group. One way we can accomplish this is using the Azure CLI. Setup Install the Azure CLI if it’s not already installed. If you aren’t currently logged in with Azure CLI run: &amp;gt;... </summary> </entry> </feed>
